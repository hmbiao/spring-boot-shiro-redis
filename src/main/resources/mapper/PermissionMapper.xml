<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jx.example.dao.PermissionMapper">
  <resultMap id="BaseResultMap" type="com.jx.example.entity.Permission">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="permission_name" jdbcType="VARCHAR" property="permissionName" />
    <result column="permission_description" jdbcType="VARCHAR" property="permissionDescription" />
    <result column="permission_type" jdbcType="TINYINT" property="permissionType" />
    <result column="parent_permission_name" jdbcType="VARCHAR" property="parentPermissionName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="delete_flag" jdbcType="CHAR" property="deleteFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, permission_name, permission_description, permission_type, parent_permission_name, 
    create_time, update_time, delete_flag
  </sql>
  <sql id="sql_where">
    <where>
      <if test="permissionName != null">
         and permission_name = #{permissionName,jdbcType=VARCHAR}
      </if>
      <if test="permissionDescription != null">
         and permission_description = #{permissionDescription,jdbcType=VARCHAR}
      </if>
      <if test="permissionType != null">
         and permission_type = #{permissionType,jdbcType=TINYINT}
      </if>
      <if test="parentPermissionName != null">
         and parent_permission_name = #{parentPermissionName,jdbcType=VARCHAR}
      </if>
      <if test="createTime != null">
         and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null">
         and update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="deleteFlag != null">
         and delete_flag = #{deleteFlag,jdbcType=CHAR}
      </if>
    </where>
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jx.example.entity.Permission">
    insert into permission (id, permission_name, permission_description, 
      permission_type, parent_permission_name, create_time, 
      update_time, delete_flag)
    values (#{id,jdbcType=INTEGER}, #{permissionName,jdbcType=VARCHAR}, #{permissionDescription,jdbcType=VARCHAR}, 
      #{permissionType,jdbcType=TINYINT}, #{parentPermissionName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jx.example.entity.Permission">
    insert into permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="permissionName != null">
        permission_name,
      </if>
      <if test="permissionDescription != null">
        permission_description,
      </if>
      <if test="permissionType != null">
        permission_type,
      </if>
      <if test="parentPermissionName != null">
        parent_permission_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleteFlag != null">
        delete_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="permissionName != null">
        #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="permissionDescription != null">
        #{permissionDescription,jdbcType=VARCHAR},
      </if>
      <if test="permissionType != null">
        #{permissionType,jdbcType=TINYINT},
      </if>
      <if test="parentPermissionName != null">
        #{parentPermissionName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        #{deleteFlag,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jx.example.entity.Permission">
    update permission
    <set>
      <if test="permissionName != null">
        permission_name = #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="permissionDescription != null">
        permission_description = #{permissionDescription,jdbcType=VARCHAR},
      </if>
      <if test="permissionType != null">
        permission_type = #{permissionType,jdbcType=TINYINT},
      </if>
      <if test="parentPermissionName != null">
        parent_permission_name = #{parentPermissionName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null">
        delete_flag = #{deleteFlag,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jx.example.entity.Permission">
    update permission
    set permission_name = #{permissionName,jdbcType=VARCHAR},
      permission_description = #{permissionDescription,jdbcType=VARCHAR},
      permission_type = #{permissionType,jdbcType=TINYINT},
      parent_permission_name = #{parentPermissionName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getList" parameterType="com.jx.example.entity.Permission" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
     from permission
    <include refid="sql_where" />
  </select>
  <select id="getListByPage" parameterType="java.util.Map" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
     from permission
    <include refid="sql_where" />
    <if test="begin >= 0 AND pageSize > 0">
      limit #{begin} , #{pageSize}
    </if>
  </select>
  <select id="getCount" parameterType="java.util.Map" resultType="java.lang.Long">
     select count(ID) 
     from permission
    <include refid="sql_where" />
  </select>
  <select id="findPermissionByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
     select 
    <include refid="Base_Column_List" />
     from permission
    LEFT JOIN role_permission ON permission.id=role_permission.permission_id WHERE role_permission.role_id=#{id,jdbcType=INTEGER}
  </select>
</mapper>